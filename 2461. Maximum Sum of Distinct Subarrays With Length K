class Solution { 
public: 
    long long maximumSubarraySum(vector<int>& nums, int k) { 
        unordered_map<int, int> mp;
        long long sum = 0, maxi=0;
        for(int i=0; i<k; i++)
        {
            mp[nums[i]]+=1;
            sum+=nums[i];
        }
        if(mp.size() == k)
            maxi=sum;
        int left=0;
        for(int i=k; i<nums.size(); i++)
        {
            sum-=nums[left];
            sum+=nums[i];
            mp[nums[left]]--;
            if(mp[nums[left]]==0)
                mp.erase(nums[left]);
            mp[nums[i]]++;
            left++;
            if(mp.size()==k)
                maxi=max(maxi,sum);
        }
        return maxi;
    } 
};
