class Solution {
public:
    
    int lastOccurence(vector<int> nums, int target)
    {
        int s=0, e = nums.size()-1, ans = -1;
        while(s<=e)
        {
            int mid=s+(e-s)/2;
            if(target == nums[mid])
            {
                ans = mid;
                s=mid+1;
            }
            else if(target > nums[mid])
                s=mid+1;
            else
                e=mid-1;
        }
        return ans;
    }
    
    int firstOccurence(vector<int> nums, int target)
    {
        int s=0, e = nums.size()-1, ans = -1;
        while(s<=e)
        {
            int mid=s+(e-s)/2;
            if(target == nums[mid])
            {
                ans = mid;
                e=mid-1;
            }
            else if(target > nums[mid])
                s=mid+1;
            else
                e=mid-1;
        }
        return ans;
    }
    
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> ans;
        int val1 = firstOccurence(nums,target);
        int val2 = lastOccurence(nums, target);
        ans.push_back(val1);
        ans.push_back(val2);
        return ans;
    }
};
