class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int row = matrix.size();
        int col = matrix[0].size();
        int totalE = row*col;
        int count = 0;
        
        int minRow = 0; 
        int minColumn = 0;
        int maxRow = matrix.size()-1;
        int maxColumn = matrix[0].size()-1;
        
        vector<int> ans;
        while(count < totalE)
        {
            for(int i = minColumn , j = minRow; i<=maxColumn && count < totalE; i++){
                ans.push_back(matrix[j][i]);
                count++;
            }    
            minRow++;
            
            for(int i = minRow, j = maxColumn; i<=maxRow && count < totalE; i++){
                ans.push_back(matrix[i][j]);
                count++;
            }
            maxColumn--;
            
            for(int i = maxColumn, j = maxRow; i>= minColumn && count < totalE; i--){
                ans.push_back(matrix[j][i]);
                count++;
            }
            maxRow--;
            
            for(int i = maxRow, j= minColumn; i>=minRow && count < totalE; i--){
                ans.push_back(matrix[i][j]);
                count++;
            }
            minColumn++;
        }
        return ans;
    }
};
