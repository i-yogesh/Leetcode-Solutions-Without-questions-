class Solution {
public:

    void left(Node* root, vector<int> &ans)
    {
         if((root == NULL) || (root->left == NULL && root->right == NULL))
    return;
        
        ans.push_back(root->data);
        if(root->left)  
        left(root->left, ans);
        else if(root->right)
        left(root->right, ans);
    }
    
    void leaf(Node* root, vector<int> &ans)
{
    if(root == NULL)
    return;

    if(root->left == NULL && root->right == NULL)
    {
        ans.push_back(root->data);
        return;
    }
    leaf(root->left, ans);
    leaf(root->right, ans);
}
    
    void right(Node* root, vector<int> &ans)
{
    if((root == NULL) || (root->left == NULL && root->right == NULL))
    return;

    if(root->right)
    right(root->right, ans);
    else
    right(root->left, ans);

    //waps aate vkt
    ans.push_back(root->data);
}
    
    vector <int> boundary(Node *root)
    {
        vector<int> ans;
        ans.push_back(root->data);
    
        //traverse Left
        left(root->left, ans);
    
        //Leaf Nodes Only
        leaf(root->left, ans);
        leaf(root->right, ans);
    
        //traverse Right
        right(root->right, ans);
        return ans;
    }
};
